// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// nmfgen
List nmfgen(arma::mat data, int noSignatures, int iter);
RcppExport SEXP _NNMF_nmfgen(SEXP dataSEXP, SEXP noSignaturesSEXP, SEXP iterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< int >::type noSignatures(noSignaturesSEXP);
    Rcpp::traits::input_parameter< int >::type iter(iterSEXP);
    rcpp_result_gen = Rcpp::wrap(nmfgen(data, noSignatures, iter));
    return rcpp_result_gen;
END_RCPP
}
// nmftrain
List nmftrain(arma::mat data, arma::mat exposures, arma::mat signatures, arma::mat weight, int iter);
RcppExport SEXP _NNMF_nmftrain(SEXP dataSEXP, SEXP exposuresSEXP, SEXP signaturesSEXP, SEXP weightSEXP, SEXP iterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type exposures(exposuresSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type signatures(signaturesSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type weight(weightSEXP);
    Rcpp::traits::input_parameter< int >::type iter(iterSEXP);
    rcpp_result_gen = Rcpp::wrap(nmftrain(data, exposures, signatures, weight, iter));
    return rcpp_result_gen;
END_RCPP
}
// nmfspatial
List nmfspatial(arma::mat data, int noSignatures, arma::mat weight, int maxiter, double tolerance, int initial, int smallIter);
RcppExport SEXP _NNMF_nmfspatial(SEXP dataSEXP, SEXP noSignaturesSEXP, SEXP weightSEXP, SEXP maxiterSEXP, SEXP toleranceSEXP, SEXP initialSEXP, SEXP smallIterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< int >::type noSignatures(noSignaturesSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type weight(weightSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type tolerance(toleranceSEXP);
    Rcpp::traits::input_parameter< int >::type initial(initialSEXP);
    Rcpp::traits::input_parameter< int >::type smallIter(smallIterSEXP);
    rcpp_result_gen = Rcpp::wrap(nmfspatial(data, noSignatures, weight, maxiter, tolerance, initial, smallIter));
    return rcpp_result_gen;
END_RCPP
}
// nmfspatialbatch
List nmfspatialbatch(arma::mat data, int noSignatures, List weight, List batch, int maxiter, double tolerance, int initial, int smallIter, int error_freq);
RcppExport SEXP _NNMF_nmfspatialbatch(SEXP dataSEXP, SEXP noSignaturesSEXP, SEXP weightSEXP, SEXP batchSEXP, SEXP maxiterSEXP, SEXP toleranceSEXP, SEXP initialSEXP, SEXP smallIterSEXP, SEXP error_freqSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< int >::type noSignatures(noSignaturesSEXP);
    Rcpp::traits::input_parameter< List >::type weight(weightSEXP);
    Rcpp::traits::input_parameter< List >::type batch(batchSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type tolerance(toleranceSEXP);
    Rcpp::traits::input_parameter< int >::type initial(initialSEXP);
    Rcpp::traits::input_parameter< int >::type smallIter(smallIterSEXP);
    Rcpp::traits::input_parameter< int >::type error_freq(error_freqSEXP);
    rcpp_result_gen = Rcpp::wrap(nmfspatialbatch(data, noSignatures, weight, batch, maxiter, tolerance, initial, smallIter, error_freq));
    return rcpp_result_gen;
END_RCPP
}
// nmfspatialbatch2
List nmfspatialbatch2(arma::mat data, int noSignatures, List weight, List batch, int maxiter, double tolerance, int error_freq);
RcppExport SEXP _NNMF_nmfspatialbatch2(SEXP dataSEXP, SEXP noSignaturesSEXP, SEXP weightSEXP, SEXP batchSEXP, SEXP maxiterSEXP, SEXP toleranceSEXP, SEXP error_freqSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< int >::type noSignatures(noSignaturesSEXP);
    Rcpp::traits::input_parameter< List >::type weight(weightSEXP);
    Rcpp::traits::input_parameter< List >::type batch(batchSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type tolerance(toleranceSEXP);
    Rcpp::traits::input_parameter< int >::type error_freq(error_freqSEXP);
    rcpp_result_gen = Rcpp::wrap(nmfspatialbatch2(data, noSignatures, weight, batch, maxiter, tolerance, error_freq));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_NNMF_nmfgen", (DL_FUNC) &_NNMF_nmfgen, 3},
    {"_NNMF_nmftrain", (DL_FUNC) &_NNMF_nmftrain, 5},
    {"_NNMF_nmfspatial", (DL_FUNC) &_NNMF_nmfspatial, 7},
    {"_NNMF_nmfspatialbatch", (DL_FUNC) &_NNMF_nmfspatialbatch, 9},
    {"_NNMF_nmfspatialbatch2", (DL_FUNC) &_NNMF_nmfspatialbatch2, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_NNMF(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
